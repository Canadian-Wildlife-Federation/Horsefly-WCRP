Traceback (most recent call last):
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\jupyter_cache\executors\utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\nbclient\client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\nbclient\util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\nbclient\util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\asyncio\base_events.py", line 587, in run_until_complete
    return future.result()
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\nbclient\client.py", line 664, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\nbclient\client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\Tomas\anaconda3.1\envs\test\lib\site-packages\nbclient\client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from ipyleaflet import *
import json


#make the map
m = Map(center=(52.6,-120.5), zoom=8)

#basemap tile
dm_layer = basemap_to_tiles(basemaps.CartoDB.DarkMatter)
m.add_layer(dm_layer)

# #add the layers
# with open('test1.geojson') as f:
#     data = json.load(f)

# geo = GeoJSON(data=data,
#               style = {
#                 'color': 'blue'
#               })

# m.add_layer(geo)

#attempt at querying data from pg_featureserv API for bcfishpass

import requests
import json

request = 'https://features.hillcrestgeo.ca/bcfishpass/collections/bcfishpass.barriers_bt/items.json'
query = '?watershed_group_code=BULK' #this query slows things down for some reason

request1 = 'https://features.hillcrestgeo.ca/bcfishpass/collections/bcfishpass.crossings/items.json'
query1 = '?filter=watershed_group_code%20=%20%27HORS%27%20AND%20all_spawningrearing_km%3e0'

response_API = requests.get(request1+query1)



parse = response_API.text
gjson = json.loads(parse)

for feature in gjson['features']:
  feature['Properties']['Style'] = {
    "color": "grey",
    "weight": 1,
    "fillColor": "grey",
    "fillOpacity": 0.5,
  }


geo1 = GeoJSON(data=gjson,
              style = {
                "color": "#ff7800",
                "weight": 5,
                "opacity": 0.65
              },
              

              )

def popup(event=None, feature=None, id=None, properties=None):
    geo1.value = properties["watershed_group_code"]

geo1.on_click(popup)

m.add_layer(geo1)

# #tile layers test
# tile_url = "https://tiles.hillcrestgeo.ca/bcfishpass/bcfishpass.barriers_ch_co_sk.json"
# tile = VectorTileLayer(url=tile_url)


# m.add_layer(tile)


m

------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mKeyError[0m                                  Traceback (most recent call last)
[1;32m~\AppData\Local\Temp\ipykernel_13944\2040064819.py[0m in [0;36m<module>[1;34m[0m
[0;32m     44[0m     [1;34m"weight"[0m[1;33m:[0m [1;36m1[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m     45[0m     [1;34m"fillColor"[0m[1;33m:[0m [1;34m"grey"[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 46[1;33m     [1;34m"fillOpacity"[0m[1;33m:[0m [1;36m0.5[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     47[0m   }
[0;32m     48[0m [1;33m[0m[0m

[1;31mKeyError[0m: 'Properties'
KeyError: 'Properties'

